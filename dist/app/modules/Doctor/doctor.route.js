"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DoctorRoutes = void 0;
const express_1 = __importDefault(require("express"));
const AuthMiddleware_1 = __importDefault(require("../../middlewares/AuthMiddleware"));
const doctor_controller_1 = require("./doctor.controller");
const client_1 = require("@prisma/client");
const validateRequest_1 = __importDefault(require("../../middlewares/validateRequest"));
const doctor_validation_1 = require("./doctor.validation");
const router = express_1.default.Router();
router.get("/get-all-doctors", (0, AuthMiddleware_1.default)("admin", "super_admin"), doctor_controller_1.DoctorController.getAllDoctors);
router.get("/get-single-doctor/:id", (0, AuthMiddleware_1.default)("admin", "super_admin"), doctor_controller_1.DoctorController.getSingleDoctor);
router.delete("/delete-doctor/:id", (0, AuthMiddleware_1.default)(client_1.UserRole.admin, client_1.UserRole.super_admin), doctor_controller_1.DoctorController.deleteDoctor);
router.delete("/soft-delete-doctor/:id", (0, AuthMiddleware_1.default)(client_1.UserRole.admin, client_1.UserRole.super_admin), doctor_controller_1.DoctorController.softDeleteDoctor);
router.patch("/update-doctor/:id", (0, AuthMiddleware_1.default)(client_1.UserRole.admin, client_1.UserRole.super_admin), (0, validateRequest_1.default)(doctor_validation_1.updateDoctorSchema), doctor_controller_1.DoctorController.updateDoctor);
router.get("/filter-doctor-by-specialties/:specialtiesId", (0, AuthMiddleware_1.default)("admin", "super_admin"), doctor_controller_1.DoctorController.filterDoctorBySpecialties);
exports.DoctorRoutes = router;
